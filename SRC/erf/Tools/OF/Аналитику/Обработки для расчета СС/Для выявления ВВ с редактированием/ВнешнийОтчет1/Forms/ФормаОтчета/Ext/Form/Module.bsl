Процедура НовыйСписокПродукции(НовыйМассивПродукции)
	Продукция.Очистить();
	Для Н=1 По НовыйМассивПродукции.Количество() Цикл
		Продукция.Добавить();
	КонецЦикла; 
	Продукция.ЗагрузитьКолонку(НовыйМассивПродукции, "Продукция");
КонецПроцедуры

Процедура КнопкаСформироватьНажатие(Кнопка)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыпускПродукцииБухгалтерскийУчетОбороты.Продукция КАК ВсяПродукция
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииБухгалтерскийУчет.Обороты(НАЧАЛОПЕРИОДА(&Начало, МЕСЯЦ), КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ), Запись, ) КАК ВыпускПродукцииБухгалтерскийУчетОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗатратыНаВыпускПродукции.Обороты(НАЧАЛОПЕРИОДА(&Начало, МЕСЯЦ), КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ), Запись, ) КАК ЗатратыНаВыпускПродукцииОбороты
	|		ПО ВыпускПродукцииБухгалтерскийУчетОбороты.Продукция = ЗатратыНаВыпускПродукцииОбороты.Затрата
	|УПОРЯДОЧИТЬ ПО
	|	ВсяПродукция
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	Запрос = новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("Начало", Начало);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	если Результат.Количество() = 0 тогда
		Сообщить("Продукции используемой как затрата не найдено", СтатусСообщения.Информация);
	иначе
		КолонкаЗначений = Результат.ВыгрузитьКолонку("ВсяПродукция");
		НовыйСписокПродукции(КолонкаЗначений);
	конецЕсли;	
КонецПроцедуры

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	Начало = НачалоМесяца(ТекущаяДата());
	Продукция.Колонки.Очистить();
	Продукция.Колонки.Добавить("Продукция", новый ОписаниеТипов("СправочникСсылка.Номенклатура"), );
	ЭлементыФормы.ТабличноеПоле1.СоздатьКолонки();
КонецПроцедуры

Процедура Сформировать(ТолькоОтобразить = ИСТИНА, ОтобразитьПары = ЛОЖЬ)
	ОтобразитьПары = ?(ТолькоОтобразить, ОтобразитьПары, ЛОЖЬ);
	ПоказатьРВВ = ?(ФильтроватьпоРВВ, ИСТИНА, ПоказатьРВВ);
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	" + ?(ОтобразитьПары, "ЗатратыНаВыпускПродукцииОбороты.Продукция Как ПродукцияПродукции,", "") + "
	|	ВложенныйЗапрос.ВсяПродукция КАК Затрата
	|	" + ?( ПоказатьРВВ , ",ЕСТЬNULL(ВстречныйВыпускПродукцииУслуг.Период, 0) КАК ПериодРВВ", "") + "
	|ИЗ
	|	РегистрНакопления.ЗатратыНаВыпускПродукции.Обороты(НАЧАЛОПЕРИОДА(&Начало, МЕСЯЦ), КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ), Запись, ) КАК ЗатратыНаВыпускПродукцииОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВыпускПродукцииБухгалтерскийУчетОбороты.Продукция КАК ВсяПродукция
	|		ИЗ
	|			РегистрНакопления.ВыпускПродукцииБухгалтерскийУчет.Обороты(НАЧАЛОПЕРИОДА(&Начало, МЕСЯЦ), КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ), Запись, ) КАК ВыпускПродукцииБухгалтерскийУчетОбороты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗатратыНаВыпускПродукции.Обороты(НАЧАЛОПЕРИОДА(&Начало, МЕСЯЦ), КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ), Запись, ) КАК ЗатратыНаВыпускПродукцииОбороты
	|				ПО ВыпускПродукцииБухгалтерскийУчетОбороты.Продукция = ЗатратыНаВыпускПродукцииОбороты.Затрата) КАК ВложенныйЗапрос
	|		ПО ЗатратыНаВыпускПродукцииОбороты.Затрата = ВложенныйЗапрос.ВсяПродукция
	|" + ?( ПоказатьРВВ , "		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВстречныйВыпускПродукцииУслуг КАК ВстречныйВыпускПродукцииУслуг
	|		ПО ЗатратыНаВыпускПродукцииОбороты.Продукция.Ссылка = ВстречныйВыпускПродукцииУслуг.Продукция.Ссылка
	|			И ЗатратыНаВыпускПродукцииОбороты.Затрата.Ссылка = ВстречныйВыпускПродукцииУслуг.Затрата.Ссылка
	|			И ВстречныйВыпускПродукцииУслуг.Период >= НАЧАЛОПЕРИОДА(&Начало, МЕСЯЦ)
	|			И ВстречныйВыпускПродукцииУслуг.Период <= КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ)", "") + "
	|ГДЕ
	|	ЗатратыНаВыпускПродукцииОбороты.Продукция В(&СписокПродукцииДляВВ)
	| "+ ?(ФильтроватьпоРВВ, " И ЕСТЬNULL(ВстречныйВыпускПродукцииУслуг.Период, 0) = 0", "") + "
	|УПОРЯДОЧИТЬ ПО
	|	"+ ?((ПорядокПоПродукции И ОтобразитьПары), "ПродукцияПродукции", "Затрата") + "
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	Запрос = новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("Начало", Начало);
	Запрос.УстановитьПараметр("СписокПродукцииДляВВ", Продукция);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	если Результат.Количество() = 0 тогда
		Сообщить("Продукции используемой как затрата не найдено", СтатусСообщения.Информация);
	иначе
		Если ТолькоОтобразить Тогда
			//вТабличныйДокумент(Результат);
			
			Продукция = Результат.Скопировать();
		Иначе
			КолонкаЗначений = Результат.ВыгрузитьКолонку("Затрата");
			НовыйСписокПродукции(КолонкаЗначений);
		КонецЕсли;
	конецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыВывестиПары(Кнопка)
	Сформировать(Истина, Истина);
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаменитьНаЗатраты(Кнопка)
	Сформировать(Ложь);
КонецПроцедуры

Процедура ОсновныеДействияФормыДерево(Кнопка)
	ФормаДерева = ПолучитьФорму("ФормаОтчета1", ЭтаФорма);
	ФормаДерева.Открыть()
КонецПроцедуры

Процедура ТабличноеПоле1Выбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ОсновныеДействияФормыДерево("");
КонецПроцедуры

Процедура ОсновныеДействияФормыСписокВВ(Кнопка)
	// Вставить содержимое обработчика.
	ФормаДерева = ПолучитьФорму("ФормаВВ", ЭтаФорма);
	ФормаДерева.Открыть()
КонецПроцедуры

Процедура ДействияФормыДействие1(Кнопка)
	ФормаДерева = ПолучитьФорму("ФормаОтчета1", ЭтаФорма);
	ФормаДерева.Открыть()
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ОсновныеДействияФормыОчиститьМесяц(Кнопка)
	Если ЗначениеЗаполнено(Начало) Тогда
		Если Вопрос("Удалить записи РВВ за выбранный месяц", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		Набор = РегистрыСведений.ВстречныйВыпускПродукцииУслуг.СоздатьНаборЗаписей();
		Набор.Отбор.Период.Значение = Начало;
		Набор.Отбор.Период.Использование=Истина;
		Набор.Прочитать();
		Набор.Очистить();
		Набор.Записать();
	Иначе
		Предупреждение("Не заполдненна дата периода", 3,"Внимание !!!");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОтказатьсяОтПрошлых(Кнопка)
	Если Вопрос("Добавить в РВВ отменяющие записи ?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("СпособОценкиСтоимости", Перечисления.СпособыОценкиСтоимостиВстречногоВыпуска.ПоРасчетнойСтоимости);
	ТекстЗапроса = "
	|ВЫБРАТЬ 
	|	ВстречныйВыпускПродукцииУслугСрезПоследних.Продукция КАК Продукция,
	|	ВстречныйВыпускПродукцииУслугСрезПоследних.Затрата	КАК Затрата,
	|	ВстречныйВыпускПродукцииУслугСрезПоследних.Период	КАК ПериодРВВ,
	|	ВстречныйВыпускПродукцииУслугСрезПоследних.СпособОценкиСтоимости КАК СпособОценкиСтоимости
	|ИЗ
	|	РегистрСведений.ВстречныйВыпускПродукцииУслуг.СрезПоследних(КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ),  ) КАК ВстречныйВыпускПродукцииУслугСрезПоследних
	|ГДЕ
	|	ВстречныйВыпускПродукцииУслугСрезПоследних.СпособОценкиСтоимости = &Отбор
	|УПОРЯДОЧИТЬ ПО
	|	Продукция,
	|	Затрата
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	Запрос = новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Начало", Начало);
	Запрос.УстановитьПараметр("Отбор", Перечисления.СпособыОценкиСтоимостиВстречногоВыпуска.ПоРасчетнойСтоимости);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	НаборЗаписей = РегистрыСведений.ВстречныйВыпускПродукцииУслуг.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Значение = Начало;
	НаборЗаписей.Отбор.Период.Использование=Истина;
	НаборЗаписей.Прочитать();
	
	Выборка = 	РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = Начало;
		НоваяЗапись.Продукция = Выборка.Продукция;
		НоваяЗапись.Затрата = Выборка.Затрата;
		НоваяЗапись.СпособОценкиСтоимости = Перечисления.СпособыОценкиСтоимостиВстречногоВыпуска.НеРассчитывается;
	КонецЦикла;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура НачалоПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Начало) Тогда
		Начало = НачалоМесяца(Начало);
	Иначе
		Начало = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
КонецПроцедуры
