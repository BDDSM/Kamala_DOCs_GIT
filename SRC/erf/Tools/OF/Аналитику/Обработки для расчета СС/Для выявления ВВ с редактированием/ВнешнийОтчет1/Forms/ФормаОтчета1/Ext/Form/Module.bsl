Перем ТекущаяСтрокаНачальная, ТекущаяПродукция;

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
	ДеревоПродукции.Колонки.Очистить();
	ДеревоПродукции.Колонки.Добавить("Продукция", новый ОписаниеТипов("СправочникСсылка.Номенклатура"), "Продукция");
	ДеревоПродукции.Колонки.Добавить("Ветка", новый ОписаниеТипов("Строка"), "Ветка");
	ЭтаФорма.ЭлементыФормы.ПродукцияЗатрата.СоздатьКолонки();
	ЭлементыФормы.УчитыватьРВВ.Значение = ?(РегистрВВ.Количество() = 0, Ложь, Истина);
КонецПроцедуры

Функция ПараИзРегистраВВ(спрПродукция,спрЗатрата)
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Продукция", спрПродукция);
	ПараметрыОтбора.Вставить("Затрата", спрЗатрата);
	НайденныеСтроки = РегистрВВ.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

Процедура ПометитьЯчейку(СтрокаДерева, ТипСтроки)
	Если СтрокаДерева.Ветка = "ВВ+" Тогда
		Возврат;
	КонецЕсли;
	Если ТипСтроки = -2 Тогда
		СтрокаДереваТип = "--ВВ-";
	ИначеЕсли ТипСтроки = 2 Тогда 
		СтрокаДереваТип = "Прод.";
	ИначеЕсли ТипСтроки = 1 Тогда 
		СтрокаДереваТип = "Затр.";
	ИначеЕсли ТипСтроки = -3 Тогда 
		СтрокаДереваТип = "ВВ+";
	ИначеЕсли ТипСтроки = -4 Тогда 
		СтрокаДереваТип = "-ВВ";
	КонецЕсли;
	СтрокаДерева.Ветка = СтрокаДереваТип;
	//ЭлементыФормы.ПродукцияЗатрата.ТекущаяСтрока = СтрокаДерева;
КонецПроцедуры

Функция ПроверитьВВ(ПродукцияВВ)
	Предок = ПродукцияВВ.Родитель;
	Пока Предок <> Неопределено Цикл
		Если ПродукцияВВ.Продукция = Предок.Продукция Тогда
			Если Предок = ПродукцияВВ.Родитель Тогда
				ПометитьЯчейку(ПродукцияВВ, -3);
				//ПометитьЯчейку(Предок, -3);
			Иначе
				ПометитьЯчейку(ПродукцияВВ, -2);
				//ПометитьЯчейку(Предок, -4);
			КонецЕсли;
			Возврат Истина;
		КонецЕсли;
		Предок = Предок.Родитель;
	КонецЦикла;
	Возврат Ложь;
КонецФункции // ПроверитьВВ()

Процедура РезультатВВетку(Результат)
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Продукция", ТекущаяПродукция.Продукция);
	СтаршаяСтрока = ДеревоПродукции.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
	Для каждого НайденнаяСтрока Из СтаршаяСтрока Цикл
		ОбработкаПрерыванияПользователя();
		Если ПроверитьВВ(НайденнаяСтрока) Тогда
			Продолжить;
		КонецЕсли;
		если Результат.Количество() = 0 тогда
			ПометитьЯчейку(НайденнаяСтрока,1);
		иначе
			//вТабличныйДокумент(Результат);
			//СтаршаяСтрока = Этаформа.ЭлементыФормы.ПродукцияЗатрата.Значение;
			Если ПустаяСтрока(НайденнаяСтрока.Ветка) Тогда
				Для Каждого СтрокаЗапроса Из Результат Цикл
					Подстрока = НайденнаяСтрока.Строки.Добавить();
					Подстрока.Продукция = СтрокаЗапроса.Затрата;
					Если УчитыватьРВВ Тогда
						Если ПараИзРегистраВВ(НайденнаяСтрока.Продукция, СтрокаЗапроса.Затрата) Тогда
							ПометитьЯчейку(Подстрока,-3);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			конецЕсли;	
			ПометитьЯчейку(НайденнаяСтрока,2);
			ЭлементыФормы.ПродукцияЗатрата.Развернуть(НайденнаяСтрока,Истина);
		конецЕсли;	
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьВетку(ПарамПродукция = Неопределено)
	ТекущаяСтрокаНачальная = ЭлементыФормы.ПродукцияЗатрата.ТекущаяСтрока;
	ТекущаяПродукция = ?(ПарамПродукция = Неопределено, ТекущаяСтрокаНачальная, ПарамПродукция);
	//Если НЕ ПустаяСтрока(ТекущаяПродукция.Ветка) Тогда
	//	Предупреждение("Ветка уже обработана или не имеет продолжения");
	//	Возврат;
	//КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗатратыНаВыпускПродукцииОбороты.Продукция Как ПродукцияПродукции,
	|	ВложенныйЗапрос.ВсяПродукция КАК Затрата,
	|	ЕСТЬNULL(ВстречныйВыпускПродукцииУслуг.Период, 0) КАК ПериодРВВ
	|ИЗ
	|	РегистрНакопления.ЗатратыНаВыпускПродукции.Обороты(НАЧАЛОПЕРИОДА(&Начало, МЕСЯЦ), КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ), Запись, ) КАК ЗатратыНаВыпускПродукцииОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВыпускПродукцииБухгалтерскийУчетОбороты.Продукция КАК ВсяПродукция
	|		ИЗ
	|			РегистрНакопления.ВыпускПродукцииБухгалтерскийУчет.Обороты(НАЧАЛОПЕРИОДА(&Начало, МЕСЯЦ), КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ), Запись, ) КАК ВыпускПродукцииБухгалтерскийУчетОбороты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗатратыНаВыпускПродукции.Обороты(НАЧАЛОПЕРИОДА(&Начало, МЕСЯЦ), КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ), Запись, ) КАК ЗатратыНаВыпускПродукцииОбороты
	|				ПО ВыпускПродукцииБухгалтерскийУчетОбороты.Продукция = ЗатратыНаВыпускПродукцииОбороты.Затрата) КАК ВложенныйЗапрос
	|		ПО ЗатратыНаВыпускПродукцииОбороты.Затрата = ВложенныйЗапрос.ВсяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВстречныйВыпускПродукцииУслуг КАК ВстречныйВыпускПродукцииУслуг
	|		ПО ЗатратыНаВыпускПродукцииОбороты.Продукция.Ссылка = ВстречныйВыпускПродукцииУслуг.Продукция.Ссылка
	|			И ЗатратыНаВыпускПродукцииОбороты.Затрата.Ссылка = ВстречныйВыпускПродукцииУслуг.Затрата.Ссылка
	|			И ВстречныйВыпускПродукцииУслуг.Период >= НАЧАЛОПЕРИОДА(&Начало, МЕСЯЦ)
	|			И ВстречныйВыпускПродукцииУслуг.Период <= КОНЕЦПЕРИОДА(&Начало, МЕСЯЦ)
	|ГДЕ
	|	ЗатратыНаВыпускПродукцииОбороты.Продукция В(&СписокПродукцииДляВВ)
	//|  		И ЕСТЬNULL(ВстречныйВыпускПродукцииУслуг.Период, 0) = 0
	|УПОРЯДОЧИТЬ ПО
	|	Затрата
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	Запрос = новый Запрос(ТекстЗапроса);	
	Запрос.УстановитьПараметр("Начало", Начало);
	Запрос.УстановитьПараметр("СписокПродукцииДляВВ", ТекущаяПродукция.Продукция);
	
	Результат = Запрос.Выполнить().Выгрузить();
	РезультатВВетку(Результат);
	Если ТекущаяСтрокаНачальная <> Неопределено Тогда 
		ЭлементыФормы.ПродукцияЗатрата.ТекущаяСтрока = ТекущаяСтрокаНачальная;
	КонецЕсли;
КонецПроцедуры

Процедура ПродукцияЗатратаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СформироватьВетку();
КонецПроцедуры

Процедура ДействияФормыРаскрытьУровень(Кнопка)
	УсловиеПоиска = Новый Структура;
	УсловиеПоиска.Вставить("Ветка", "");
	СписокДляРаскрытия = ДеревоПродукции.Строки.НайтиСтроки(УсловиеПоиска, Истина);
	Если СписокДляРаскрытия.Количество() = 0 Тогда
		Предупреждение("Список пуст!", 5);
	КонецЕсли;
	Для каждого СледующаяСтрока Из СписокДляРаскрытия Цикл
		СформироватьВетку(СледующаяСтрока);
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьОдин(Кнопка)
	// Вставить содержимое обработчика.
	СформироватьВетку();
КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
	// Вставить содержимое обработчика.
	Если ЭтаФорма.ВладелецФормы.ЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока = Неопределено Тогда
		Предупреждение("В форме списка продукции не выбрана текущая позиция");
		Возврат;
	КонецЕсли;
	СтрокаТаблицы = ДеревоПродукции.Строки.Добавить();
	СтрокаТаблицы.Продукция = ЭтаФорма.ВладелецФормы.ЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока.Продукция;
	ЭлементыФормы.УчитыватьРВВ.Значение = ?(РегистрВВ.Количество() = 0, Ложь, Истина);
	СформироватьВетку(СтрокаТаблицы);
КонецПроцедуры

Процедура ДействияФормыДействие1(Кнопка)
	ДеревоПродукции.Строки.Очистить();
	Для каждого стзСледующаяПродукция Из Продукция Цикл
		СтрокаТаблицы = ДеревоПродукции.Строки.Добавить();
		СтрокаТаблицы.Продукция = стзСледующаяПродукция.Продукция;
	КонецЦикла;
	ЭлементыФормы.УчитыватьРВВ.Значение = ?(РегистрВВ.Количество() = 0, Ложь, Истина);
КонецПроцедуры

Процедура ДействияФормыДобавитьВВ(Кнопка)
	ТекущаяСтрокаНачальная = ЭлементыФормы.ПродукцияЗатрата.ТекущаяСтрока;
	Предок = ТекущаяСтрокаНачальная.Родитель;
	ПродукцияВВ = Предок.Продукция;
	ЗатратаВВ =  ТекущаяСтрокаНачальная.Продукция;
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Добавить в РВВ пару Продукция-затрата:
	|" + ПродукцияВВ + "
	|" + ЗатратаВВ, Режим, 0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		НаборЗаписей = РегистрыСведений.ВстречныйВыпускПродукцииУслуг.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Продукция.Установить(ПродукцияВВ);
		НаборЗаписей.Отбор.Затрата.Установить(ЗатратаВВ);
		НаборЗаписей.Отбор.Период.Установить(Начало);
		
		НовЗапись = НаборЗаписей.Добавить();
		
		НовЗапись.Продукция = ПродукцияВВ;
		НовЗапись.Затрата 	= ЗатратаВВ;
		НовЗапись.Период 	= Начало;
		НовЗапись.СпособОценкиСтоимости	= Перечисления.СпособыОценкиСтоимостиВстречногоВыпуска.ПоРасчетнойСтоимости;
		
		НаборЗаписей.Записать(Истина);
	КонецЕсли;
КонецПроцедуры

Процедура ПродукцияЗатратаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ТипСтроки = ДанныеСтроки.Ветка;
	Если ТипСтроки = "--ВВ-" Тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.Красный;
	ИначеЕсли ТипСтроки = "Прод." Тогда 
		ОформлениеСтроки.ЦветФона = WebЦвета.ДымчатоБелый;
	ИначеЕсли ТипСтроки = "Затр." Тогда 
		ОформлениеСтроки.ЦветФона = WebЦвета.СветлоСерый;
	ИначеЕсли ТипСтроки = "ВВ+" Тогда 
		ОформлениеСтроки.ЦветФона = WebЦвета.Васильковый;
	ИначеЕсли ТипСтроки = "-ВВ" Тогда 
		ОформлениеСтроки.ЦветФона = WebЦвета.Васильковый;
	КонецЕсли;
КонецПроцедуры

