
#Область КомандыФормы

Процедура ПриОткрытии()
	ДатаДокумента = ТекущаяДата();
	Комментарий = "Сторнировка проводок";
	
	СтандартныйПериод.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	СтандартныйПериод.ДатаНачала = НачалоГода(ТекущаяДата());
	СтандартныйПериод.ДатаОкончания = КонецДня(ТекущаяДата());
	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериода", СтандартныйПериод.ДатаНачала);
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериода", КонецДня(СтандартныйПериод.ДатаОкончания));
	
	КоррСчет = ПланыСчетов.Хозрасчетный.Вспомогательный;
	
	ЭлементыФормы.СсылкаДокументКорректировки.Заголовок = "<Документ не выбран>";
КонецПроцедуры

Процедура СтандартныйПериодПриИзменении(Элемент)
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериода", СтандартныйПериод.ДатаНачала);
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериода", КонецДня(СтандартныйПериод.ДатаОкончания));
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(СтандартныйПериод.ДатаНачала, ?(СтандартныйПериод.ДатаОкончания='0001-01-01', СтандартныйПериод.ДатаОкончания, КонецДня(СтандартныйПериод.ДатаОкончания)));
	Если НастройкаПериода.Редактировать() Тогда
		СтандартныйПериод.ДатаНачала = НастройкаПериода.ПолучитьДатуНачала();
		СтандартныйПериод.ДатаОкончания = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачалоПериода", СтандартныйПериод.ДатаНачала);
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КонецПериода", КонецДня(СтандартныйПериод.ДатаОкончания));
КонецПроцедуры

Процедура ДействияФормыПоказатьНастрокиКомпоновщика(Кнопка)
	ЭлементыФормы.ДействияФормы.Кнопки.ПоказатьНастрокиКомпоновщика.Пометка = Не ЭлементыФормы.ДействияФормы.Кнопки.ПоказатьНастрокиКомпоновщика.Пометка;
	ОбработатьОтображениеНастроекКомпоновщикаНаФорме();
КонецПроцедуры

Процедура ДействияФормыПоказатьПроводкиКСторнированию(Кнопка)
	ЭлементыФормы.ДействияФормы.Кнопки.ПоказатьПроводкиКСторнированию.Пометка = Не ЭлементыФормы.ДействияФормы.Кнопки.ПоказатьПроводкиКСторнированию.Пометка;
	ОбработатьОтображениеПроводкиКСторнированиюНаФорме();
КонецПроцедуры

Процедура ОбработатьОтображениеНастроекКомпоновщикаНаФорме()
	
	ФормаОтчета = ЭтаФорма;
	
	ОтображатьНастройкаКомпоновщика = ФормаОтчета.ЭлементыФормы.ДействияФормы.Кнопки.ПоказатьНастрокиКомпоновщика.Пометка;
	
	Если ОтображатьНастройкаКомпоновщика Тогда
		// Нужно показывать отбор
		ФормаОтчета.ЭлементыФормы.РазделительНастроекИПроводок.Свертка	= РежимСверткиЭлементаУправления.Нет;
		ФормаОтчета.ЭлементыФормы.ПанельНастройкиКомпоновщика.Свертка	= РежимСверткиЭлементаУправления.Нет;
		ФормаОтчета.ЭлементыФормы.РазделительНастроекИПроводок.УстановитьПривязку(ГраницаЭлементаУправления.Верх, ФормаОтчета.Панель, ГраницаЭлементаУправления.Верх, ФормаОтчета.Панель, ГраницаЭлементаУправления.Низ);
		ФормаОтчета.ЭлементыФормы.ПанельНастройкиКомпоновщика.УстановитьПривязку(ГраницаЭлементаУправления.Низ, ФормаОтчета.ЭлементыФормы.РазделительНастроекИПроводок, ГраницаЭлементаУправления.Верх);
		
	Иначе
		// Не нужно показывать отбор
		ФормаОтчета.ЭлементыФормы.ПанельНастройкиКомпоновщика.УстановитьПривязку(ГраницаЭлементаУправления.Низ);
		ФормаОтчета.ЭлементыФормы.РазделительНастроекИПроводок.УстановитьПривязку(ГраницаЭлементаУправления.Верх, ФормаОтчета.ЭлементыФормы.ПанельНастройкиКомпоновщика, ГраницаЭлементаУправления.Низ);
		ФормаОтчета.ЭлементыФормы.ПанельНастройкиКомпоновщика.Свертка	= РежимСверткиЭлементаУправления.Верх;
		ФормаОтчета.ЭлементыФормы.РазделительНастроекИПроводок.Свертка	= РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьОтображениеПроводкиКСторнированиюНаФорме()
	
	ФормаОтчета = ЭтаФорма;
	
	ОтображатьНастройкаКомпоновщика = ФормаОтчета.ЭлементыФормы.ДействияФормы.Кнопки.ПоказатьПроводкиКСторнированию.Пометка;
	
	Если ОтображатьНастройкаКомпоновщика Тогда
		// Нужно показывать проводки
		ФормаОтчета.ЭлементыФормы.ПанельПроводкиКСторнированию.Свертка	= РежимСверткиЭлементаУправления.Нет;
		
	Иначе
		// Не нужно показывать проводки
		ФормаОтчета.ЭлементыФормы.ПанельПроводкиКСторнированию.Свертка	= РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;

КонецПроцедуры

Процедура ДействияФормыСформироватьСторно(Кнопка)
	НачатьТранзакцию();
	Если Не ЗначениеЗаполнено(ДокументКорректировки) Тогда 
		ОтменитьТранзакцию();
		Сообщить("Не выбран документ корректировки");
		Возврат;
	КонецЕсли;
	ТЗПроводки = ПолучитьРезультатТаблицей();
	ЗагрузитьПроводкиВДокумент(ДокументКорректировки, ТЗПроводки);
	ЗафиксироватьТранзакцию();
КонецПроцедуры

Процедура ДействияФормыОтобратьВТаблицу(Кнопка)
	ЗаполнитьТаблицуПроводок();
КонецПроцедуры

Процедура ДействияФормыСформироватьСортноПоТаблице(Кнопка)
	Если Не ЗначениеЗаполнено(ДокументКорректировки) Тогда 
		ОтменитьТранзакцию();
		Сообщить("Не выбран документ корректировки");
		Возврат;
	КонецЕсли;
	ТЗПроводки = ПроводкиКСторнированию.Выгрузить(Новый Структура("Пометка", Истина));
	ЗагрузитьПроводкиВДокумент(ДокументКорректировки, ТЗПроводки);
КонецПроцедуры

Процедура КоманднаяПанельПроводкиКСторнированиюУстановитьПометки(Кнопка)
	УстановитьПометки(Истина);
КонецПроцедуры

Процедура КоманднаяПанельПроводкиКСторнированиюСнятьПометки(Кнопка)
	УстановитьПометки(Ложь);
КонецПроцедуры

Процедура УстановитьПометки(Значение)
	ТЗПометки = ПроводкиКСторнированию.Выгрузить(,"Пометка");
	ТЗПометки.ЗаполнитьЗначения(Значение, "Пометка");
	ПроводкиКСторнированию.ЗагрузитьКолонку(ТЗПометки.ВыгрузитьКолонку("Пометка"), "Пометка");
КонецПроцедуры

Процедура СсылкаДокументКорректировкиНажатие(Элемент)
	Если ЗначениеЗаполнено(ДокументКорректировки) Тогда 
		ФормаДокумента = ДокументКорректировки.ПолучитьФорму("ФормаДокумента", ЭтаФорма);
		ФормаДокумента.ЗакрыватьПриЗакрытииВладельца	= Истина;
		Если ФормаДокумента.Открыта() Тогда 
			ФормаДокумента.Активизировать();
		Иначе 
			ФормаДокумента.Открыть();
		КонецЕсли;
	Иначе 
		ФормаВыбора = ЭтотОбъект.ПолучитьФорму("ФормаВыбораКорректировкиЗаписейРегистров", ЭтаФорма);
		ФормаВыбора.ЗакрыватьПриВыборе				= Истина;
		ФормаВыбора.ЗакрыватьПриЗакрытииВладельца	= Истина;
		ФормаВыбора.РежимВыбора						= Истина;
		Если ФормаВыбора.Открыта() Тогда 
			ФормаВыбора.Активизировать();
		Иначе 
			ФормаВыбора.Открыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура НадписьСоздатьДокумементНажатие(Элемент)
	Ответ = КодВозвратаДиалога.Да;
	Если ЗначениеЗаполнено(ДокументКорректировки) Тогда 
		Ответ = Вопрос("Уже выбран другой документ. Все равно создать и выбрать новый?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	Если Ответ = КодВозвратаДиалога.Да Тогда 
		ДокументКорректировки = СоздатьДокументКорректировки();
		ЭлементыФормы.СсылкаДокументКорректировки.Заголовок = Строка(ДокументКорректировки);
	КонецЕсли;
		
КонецПроцедуры

Процедура НадписьОчиститьНажатие(Элемент)
	Ответ = КодВозвратаДиалога.Да;
	Если ЗначениеЗаполнено(ДокументКорректировки) Тогда 
		Ответ = Вопрос("Очистить поле документа корректировки?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	Если Ответ = КодВозвратаДиалога.Да Тогда 
		ДокументКорректировки = Документы.КорректировкаЗаписейРегистров.ПустаяСсылка();
		ЭлементыФормы.СсылкаДокументКорректировки.Заголовок = "<Документ не выбран>";
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ВыборСсылкиДокументаКорректировкиДляСотрноПроводок" Тогда
		Если Тип("ДокументСсылка.КорректировкаЗаписейРегистров") = ТипЗнч(Параметр)
			И ЗначениеЗаполнено(Параметр) Тогда 
			ДокументКорректировки = Параметр;
			ЭлементыФормы.СсылкаДокументКорректировки.Заголовок = Строка(Параметр);
		Иначе 
			ДокументКорректировки = Документы.КорректировкаЗаписейРегистров.ПустаяСсылка();
			ЭлементыФормы.СсылкаДокументКорректировки.Заголовок = "<Документ не выбран>";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

