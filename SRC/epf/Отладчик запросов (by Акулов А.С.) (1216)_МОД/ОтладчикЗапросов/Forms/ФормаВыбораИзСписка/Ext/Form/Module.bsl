Перем СЗ Экспорт;
Перем ВыбраннаяСтрока Экспорт;
Перем СоответствиеЭлементовСписков;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если ЭлементыФормы.СЗ.ТекущаяСтрока<>Неопределено Тогда
		ВыбраннаяСтрока = СоответствиеЭлементовСписков[ЭлементыФормы.СЗ.ТекущаяСтрока];
		Если ВыбраннаяСтрока<>Неопределено Тогда
			Закрыть(Истина);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПолеСпискаВыбор(Элемент, ЭлементСписка)
	КнопкаВыполнитьНажатие(ЭлементСписка);
КонецПроцедуры

Процедура ОбновитьСписок(знач Текст)
	Текст = ВРЕГ(Текст);
	Список.Очистить();
	СоответствиеЭлементовСписков.Очистить();
	Для каждого Элемент Из СЗ Цикл
		П = Найти(ВРЕГ(Элемент.Представление), Текст);
		Если П>0 Тогда
			НовЭлем = Список.Добавить(П, Элемент.Представление);
			СоответствиеЭлементовСписков.Вставить(НовЭлем, Элемент);
		КонецЕсли;
	КонецЦикла;
	Список.СортироватьПоЗначению();
	Если Список.Количество()>0 Тогда
		ЭлементыФормы.СЗ.ТекущаяСтрока = СЗ[0];
	КонецЕсли;
КонецПроцедуры

Процедура ПолеВводаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ОбновитьСписок(Текст);
КонецПроцедуры

Процедура ПолеВводаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ОбновитьСписок(Текст);
КонецПроцедуры

Процедура ПолеВводаПриИзменении(Элемент)
	ОбновитьСписок(ПолеВвода);
КонецПроцедуры

Процедура ПриОткрытии()
	ПолеВвода = "";
	ОбновитьСписок("");
КонецПроцедуры

СоответствиеЭлементовСписков = Новый Соответствие();
СЗ = Новый СписокЗначений;