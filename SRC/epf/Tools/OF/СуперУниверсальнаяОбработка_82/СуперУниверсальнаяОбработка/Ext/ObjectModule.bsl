Перем мПредприятие;

Процедура ПрочитатьТаблицуКонстант() Экспорт
    ТаблицаКонстант.Очистить();
    Для Каждого Стр из Метаданные.Константы Цикл
        НоваяСтрока=ТаблицаКонстант.Добавить();
        Новаястрока.Имя=Стр.Имя;
        НоваяСтрока.Наименование=Стр.Представление();
        НоваяСтрока.Значение=Константы[Стр.Имя].Получить();
    КонецЦикла;
КонецПроцедуры

Процедура ЗаписатьТаблицуКонстант() Экспорт
    Для Каждого Стр из ТаблицаКонстант Цикл
        Если Константы[Стр.Имя].Получить()<>Стр.Значение Тогда
            МЗ=Константы[Стр.Имя].СоздатьМенеджерЗначения();
            Если ИзменятьОбъектыОбменДаннымиЗагрузка Тогда
                МЗ.ОбменДанными.Загрузка=Истина;
            КонецЕсли;
            МЗ.Значение=Стр.Значение;
            МЗ.Записать();
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

Процедура ПрочитатьТаблицуРолей() Экспорт
    ТаблицаРолей.Очистить();
    Для Каждого Стр из Метаданные.Роли Цикл
        НоваяСтрока=ТаблицаРолей.Добавить();
        НоваяСтрока.ИмяРоли=Стр.Имя;
        НоваяСтрока.Представление=Стр.Представление();
        НоваяСтрока.Пометка=Ложь;
    КонецЦикла;
КонецПроцедуры

Функция СоздатьСтруктуруТаблицыПрав()
    Таб=Новый ТаблицаЗначений();
    Таб.Колонки.Добавить("ТипОбъекта",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(128,ДопустимаяДлина.Переменная)));
    Таб.Колонки.Добавить("ВидОбъекта",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(128,ДопустимаяДлина.Переменная)));
    Таб.Колонки.Добавить("Право",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(128,ДопустимаяДлина.Переменная)));
    Таб.Колонки.Добавить("Значение",Новый ОписаниеТипов("Булево"));
    Возврат Таб;
КонецФункции

Процедура ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,ИмяМетаданного,Таб,ТекРоль,УдаленнаяБаза)
	Кол=Мет[ИмяМетаданного].Количество();
    Сч=0;
    ТекРольПред=ТекРоль.Представление();
    ТекМетПред=ИмяМетаданного;
    Для Каждого Стр из Мет[ИмяМетаданного] Цикл
        Для Каждого Право из ТипыПравДоступа Цикл
            НоваяСтрока=Таб.Добавить();
            НоваяСтрока.ТипОбъекта=ИмяМетаданного;
            НоваяСтрока.ВидОбъекта=Стр.Имя;
            НоваяСтрока.Право=Право;
        	Если УдаленнаяБаза Тогда
                НоваяСтрока.Значение=мПредприятие.ПравоДоступа(Право, Стр, ТекРоль);
        	Иначе
                НоваяСтрока.Значение=ПравоДоступа(Право, Стр, ТекРоль);
        	КонецЕсли;
        КонецЦикла;
        Сч=Сч+1;
        Состояние(ТекРольПред+": "+ТекМетПред+": "+Цел(100*Сч/Кол)+"%");
    КонецЦикла;
КонецПроцедуры

Процедура ПрочитатьОбщиеПрава(ТипыПравДоступа,Мет,Таб,ТекРоль,УдаленнаяБаза)
	Для Каждого Право из ТипыПравДоступа Цикл
		НоваяСтрока=Таб.Добавить();
		НоваяСтрока.ТипОбъекта="Конфигурация";
		НоваяСтрока.ВидОбъекта="Общее право";
		НоваяСтрока.Право=Право;
		Если УдаленнаяБаза Тогда
			НоваяСтрока.Значение=мПредприятие.ПравоДоступа(Право, Мет, ТекРоль);
		Иначе
			НоваяСтрока.Значение=ПравоДоступа(Право, Мет, ТекРоль);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПрочитатьТаблицуПрав(ИмяРоли,УдаленнаяБаза=Ложь)
    Таб=СоздатьСтруктуруТаблицыПрав();
    
    Если УдаленнаяБаза Тогда
        Мет=мПредприятие.Метаданные;
    Иначе
        Мет=Метаданные;
    КонецЕсли;
    
    ТекРоль=Мет.Роли[ИмяРоли];
    
    ТипыПравДоступа=Новый Массив();
    
    ТипыПравДоступа.Очистить();
    ТипыПравДоступа.Добавить("Получение");
	ТипыПравДоступа.Добавить("Установка");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"ПараметрыСеанса",Таб,ТекРоль,УдаленнаяБаза);
        
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Добавление");
	ТипыПравДоступа.Добавить("Изменение");
	ТипыПравДоступа.Добавить("Удаление");
	ТипыПравДоступа.Добавить("Просмотр");
	ТипыПравДоступа.Добавить("ИнтерактивноеДобавление");
	ТипыПравДоступа.Добавить("Редактирование");
	ТипыПравДоступа.Добавить("ИнтерактивнаяПометкаУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеСнятиеПометкиУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдалениеПомеченных");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдаление");
	ТипыПравДоступа.Добавить("ВводПоСтроке");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"ПланыОбмена",Таб,ТекРоль,УдаленнаяБаза);
    
    ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Просмотр");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"КритерииОтбора",Таб,ТекРоль,УдаленнаяБаза);
    
    ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Использование");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"Интерфейсы",Таб,ТекРоль,УдаленнаяБаза);
    
    ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Изменение");
	ТипыПравДоступа.Добавить("Просмотр");
	ТипыПравДоступа.Добавить("Редактирование");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"Константы",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Добавление");
	ТипыПравДоступа.Добавить("Изменение");
	ТипыПравДоступа.Добавить("Удаление");
	ТипыПравДоступа.Добавить("Просмотр");
	ТипыПравДоступа.Добавить("ИнтерактивноеДобавление");
	ТипыПравДоступа.Добавить("Редактирование");
	ТипыПравДоступа.Добавить("ИнтерактивнаяПометкаУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеСнятиеПометкиУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдалениеПомеченных");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдаление");
	ТипыПравДоступа.Добавить("ВводПоСтроке");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"Справочники",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Изменение");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"Последовательности",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Добавление");
	ТипыПравДоступа.Добавить("Изменение");
	ТипыПравДоступа.Добавить("Удаление");
	ТипыПравДоступа.Добавить("Просмотр");
	ТипыПравДоступа.Добавить("ИнтерактивноеДобавление");
	ТипыПравДоступа.Добавить("Редактирование");
	ТипыПравДоступа.Добавить("ИнтерактивнаяПометкаУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеСнятиеПометкиУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдалениеПомеченных");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдаление");
	ТипыПравДоступа.Добавить("ВводПоСтроке");
	ТипыПравДоступа.Добавить("ИнтерактивноеПроведение");
	ТипыПравДоступа.Добавить("ИнтерактивноеПроведениеНеОперативное");
	ТипыПравДоступа.Добавить("ИнтерактивнаяОтменаПроведения");
	ТипыПравДоступа.Добавить("ИнтерактивноеИзменениеПроведенных");
	ТипыПравДоступа.Добавить("Проведение");
	ТипыПравДоступа.Добавить("ОтменаПроведения");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"Документы",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Просмотр");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"ЖурналыДокументов",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Использование");
	ТипыПравДоступа.Добавить("Просмотр");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"Отчеты",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Использование");
	ТипыПравДоступа.Добавить("Просмотр");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"Обработки",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Добавление");
	ТипыПравДоступа.Добавить("Изменение");
	ТипыПравДоступа.Добавить("Удаление");
	ТипыПравДоступа.Добавить("Просмотр");
	ТипыПравДоступа.Добавить("ИнтерактивноеДобавление");
	ТипыПравДоступа.Добавить("Редактирование");
	ТипыПравДоступа.Добавить("ИнтерактивнаяПометкаУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеСнятиеПометкиУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдалениеПомеченных");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдаление");
	ТипыПравДоступа.Добавить("ВводПоСтроке");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"ПланыВидовХарактеристик",Таб,ТекРоль,УдаленнаяБаза);
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"ПланыСчетов",Таб,ТекРоль,УдаленнаяБаза);
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"ПланыВидовРасчета",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Изменение");
	ТипыПравДоступа.Добавить("Просмотр");
	ТипыПравДоступа.Добавить("Редактирование");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"РегистрыСведений",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Изменение");
	ТипыПравДоступа.Добавить("Просмотр");
	ТипыПравДоступа.Добавить("Редактирование");
	ТипыПравДоступа.Добавить("УправлениеИтогами");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"РегистрыНакопления",Таб,ТекРоль,УдаленнаяБаза);
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"РегистрыБухгалтерии",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Изменение");
	ТипыПравДоступа.Добавить("Просмотр");
	ТипыПравДоступа.Добавить("Редактирование");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"РегистрыРасчета",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Добавление");
	ТипыПравДоступа.Добавить("Изменение");
	ТипыПравДоступа.Добавить("Удаление");
	ТипыПравДоступа.Добавить("Просмотр");
	ТипыПравДоступа.Добавить("ИнтерактивноеДобавление");
	ТипыПравДоступа.Добавить("Редактирование");
	ТипыПравДоступа.Добавить("ИнтерактивнаяПометкаУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеСнятиеПометкиУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдалениеПомеченных");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдаление");
	ТипыПравДоступа.Добавить("ВводПоСтроке");
	ТипыПравДоступа.Добавить("ИнтерактивнаяАктивация");
	ТипыПравДоступа.Добавить("Старт");
	ТипыПравДоступа.Добавить("ИнтерактивныйСтарт");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"БизнесПроцессы",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Чтение");
	ТипыПравДоступа.Добавить("Добавление");
	ТипыПравДоступа.Добавить("Изменение");
	ТипыПравДоступа.Добавить("Удаление");
	ТипыПравДоступа.Добавить("Просмотр");
	ТипыПравДоступа.Добавить("ИнтерактивноеДобавление");
	ТипыПравДоступа.Добавить("Редактирование");
	ТипыПравДоступа.Добавить("ИнтерактивнаяПометкаУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеСнятиеПометкиУдаления");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдалениеПомеченных");
	ТипыПравДоступа.Добавить("ИнтерактивноеУдаление");
	ТипыПравДоступа.Добавить("ВводПоСтроке");
	ТипыПравДоступа.Добавить("ИнтерактивнаяАктивация");
	ТипыПравДоступа.Добавить("Выполнение");
	ТипыПравДоступа.Добавить("ИнтерактивноеВыполнение");
	ПрочитатьПоМетаданному(ТипыПравДоступа,Мет,"Задачи",Таб,ТекРоль,УдаленнаяБаза);
	
	ТипыПравДоступа.Очистить();
	ТипыПравДоступа.Добавить("Администрирование");
	ТипыПравДоступа.Добавить("МонопольныйРежим");
	ТипыПравДоступа.Добавить("АктивныеПользователи");
	ТипыПравДоступа.Добавить("ЖурналРегистрации");
	ТипыПравДоступа.Добавить("ВнешнееСоединение");
	ТипыПравДоступа.Добавить("Automation");
	ТипыПравДоступа.Добавить("ИнтерактивноеОткрытиеВнешнихОбработок");
	ТипыПравДоступа.Добавить("ИнтерактивноеОткрытиеВнешнихОтчетов");
	ТипыПравДоступа.Добавить("Вывод");
	ТипыПравДоступа.Добавить("ОбновлениеКонфигурацииБазыДанных");
	ПрочитатьОбщиеПрава(ТипыПравДоступа,Мет,Таб,ТекРоль,УдаленнаяБаза);
	
	Возврат Таб;
КонецФункции

Функция ПрочитатьСводнуюТаблицуПрав() Экспорт
    Зап=Новый Запрос();
    Зап.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц();
    
    Таб=СоздатьСтруктуруТаблицыПрав();
    
	Для Каждого Стр из ТаблицаРолей Цикл
		Если НЕ Стр.Пометка Тогда
			Продолжить;
		КонецЕсли;
		Зап.Текст="ВЫБРАТЬ
		          |	Таб.ТипОбъекта,
		          |	Таб.ВидОбъекта,
		          |	Таб.Право,
		          |	Таб.Значение
		          |ПОМЕСТИТЬ Таб
		          |ИЗ
		          |	&Таб КАК Таб";
		Зап.УстановитьПараметр("Таб",Таб);
		Зап.Выполнить();
		
		Таб2=ПрочитатьТаблицуПрав(Стр.ИмяРоли);
		
		Зап.Текст="ВЫБРАТЬ
		          |	Таб.ТипОбъекта,
		          |	Таб.ВидОбъекта,
		          |	Таб.Право,
		          |	Таб.Значение
		          |ПОМЕСТИТЬ ТабУд
		          |ИЗ
		          |	&Таб КАК Таб";
		Зап.УстановитьПараметр("Таб",Таб2);
		Зап.Выполнить();
		
		Зап.Текст="ВЫБРАТЬ
		          |	ЕСТЬNULL(Таб.ТипОбъекта, ТабУд.ТипОбъекта) КАК ТипОбъекта,
		          |	ЕСТЬNULL(Таб.ВидОбъекта, ТабУд.ВидОбъекта) КАК ВидОбъекта,
		          |	ЕСТЬNULL(Таб.Право, ТабУд.Право) КАК Право,
		          |	ВЫБОР
		          |		КОГДА ЕСТЬNULL(Таб.Значение, ЛОЖЬ)
		          |				ИЛИ ЕСТЬNULL(ТабУд.Значение, ЛОЖЬ)
		          |			ТОГДА ИСТИНА
		          |		ИНАЧЕ ЛОЖЬ
		          |	КОНЕЦ КАК Значение
		          |ИЗ
		          |	Таб КАК Таб
		          |		ПОЛНОЕ СОЕДИНЕНИЕ ТабУд КАК ТабУд
		          |		ПО Таб.ТипОбъекта = ТабУд.ТипОбъекта
		          |			И Таб.ВидОбъекта = ТабУд.ВидОбъекта
		          |			И Таб.Право = ТабУд.Право";
		Таб=Зап.Выполнить().Выгрузить();
		Зап.Текст="УНИЧТОЖИТЬ Таб; УНИЧТОЖИТЬ ТабУд";
		Зап.Выполнить();
	КонецЦикла;
    
    Зап.МенеджерВременныхТаблиц.Закрыть();
    Возврат Таб;
КонецФункции

Процедура ОткрытьМакет(ИмяМакета,Расширение="epf") Экспорт
    Макет=ПолучитьМакет(ИмяМакета);
    ИмяФайла=ПолучитьИмяВременногоФайла(Расширение);
    Попытка
    	Макет.Записать(ИмяФайла);
    Исключение
        Предупреждение("Не удалось создать файл "+ИмяФайла+"!");
        Возврат;
    КонецПопытки;
    Если ВРег(Расширение)="EPF" Тогда
    	Об=ВнешниеОбработки.Создать(ИмяФайла);
    Иначе
        Об=ВнешниеОтчеты.Создать(ИмяФайла);
    КонецЕсли;
    Ф=Об.ПолучитьФорму();
    Ф.Открыть();
КонецПроцедуры

ТаблицаКонстант.Колонки.Добавить("Имя",Новый ОписаниеТипов("Строка"));
ТаблицаКонстант.Колонки.Добавить("Наименование",Новый ОписаниеТипов("Строка"));
ТаблицаКонстант.Колонки.Добавить("Значение");

ТаблицаРолей.Колонки.Добавить("ИмяРоли",Новый ОписаниеТипов("Строка"));
ТаблицаРолей.Колонки.Добавить("Представление",Новый ОписаниеТипов("Строка"));
ТаблицаРолей.Колонки.Добавить("Пометка",Новый ОписаниеТипов("Булево"));