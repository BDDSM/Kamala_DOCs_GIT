Перем ТипГраница, ТипМоментВремени;
Перем мТипЗначенияСписка Экспорт;

Функция ПустоеЗначениеТипа(ОписаниеТипа) Экспорт
	Перем тТип;
	Если ТипЗнч(ОписаниеТипа)=Тип("Тип") Тогда
		тТип = ОписаниеТипа;
	ИначеЕсли ТипЗнч(ОписаниеТипа)<>Тип("ОписаниеТипов") Тогда
		Возврат неопределено;
	ИначеЕсли ОписаниеТипа.Типы().Количество()<1 Тогда
		Возврат неопределено;
	Иначе
		тТип = ОписаниеТипа.Типы().Получить(0);
	КонецЕсли;
	Если тТип=Тип("Булево") тогда
		Возврат Ложь;
	ИначеЕсли тТип=Тип("Число") тогда
		Возврат 0;
	ИначеЕсли тТип=Тип("Строка") Тогда
		Возврат "";
	ИначеЕсли тТип=Тип("Дата") Тогда
		Возврат Дата(1, 1, 1);
	ИначеЕсли (тТип=Тип("СписокЗначений")) или тТип=Тип("Массив") Тогда
		Возврат новый СписокЗначений;
	ИначеЕсли тТип=Тип("ТаблицаЗначений") Тогда
		Возврат новый СписокЗначений;
	ИначеЕсли тТип=Тип("ХранилищеЗначения") Тогда
		Возврат Неопределено;
	ИначеЕсли тТип=Тип("УникальныйИдентификатор") Тогда
		Возврат Неопределено;
	Иначе
		Попытка
			МТ = Новый Массив();
			МТ.Добавить(тТип);
			ОТ = Новый ОписаниеТипов(МТ);
			Возврат ОТ.ПривестиЗначение();
		Исключение
		КонецПопытки;
		Попытка
			Возврат новый(тТип);
		Исключение
			Возврат Неопределено;
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция ВыбратьТип(ВыбТипЗначения, флЗапоминать=Истина)
	Форма = ПолучитьФорму("ВыборТипаЗначения");
	Форма.ВладелецФормы = ЭтаФорма;
	Форма.НеВыбрано = Ложь;
	Форма.БезКоллекций = Истина;
	Форма.БезПустых = Истина;
	Форма.НастраиватьТип = Ложь;
	Форма.ВыбЗнач = ВыбТипЗначения;
	Если Форма.ОткрытьМодально()=Истина Тогда		
		ВыбТипЗначения = ?(Форма.НеВыбрано, Неопределено, Форма.ВыбЗнач);
		Если ВыбТипЗначения<>мТипЗначенияСписка и флЗапоминать Тогда
			Если Вопрос("Запомнить данный тип?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
				мТипЗначенияСписка = ВыбТипЗначения;
				Попытка
					ТекстТипЗначения = ?(мТипЗначенияСписка=неопределено или мТипЗначенияСписка=Null, "", ""+мТипЗначенияСписка);
				Исключение
					ТекстТипЗначения = "";
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции

Процедура ОбновитьЗаголовокФормы()
	ЭтаФорма.Заголовок = "Список значений ("+Список.Количество()+")";
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	Значение = Новый СписокЗначений;
	Для каждого Строчка Из Список Цикл	
		ТекТип = Строчка.ТипЗначения;
		Если ТекТип=ТипГраница или ТекТип=ТипМоментВремени Тогда
			Попытка
				Значение.Добавить(ЗначениеИзСтрокиВнутр(Строчка.ТЗ));
			Исключение
				Значение.Добавить(ТекТип.ПривестиЗначение());
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	Закрыть(Истина);
КонецПроцедуры

Процедура ТипЗначенияНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	Если ВыбратьТип(мТипЗначенияСписка, Ложь) Тогда
		Попытка
			ТекстТипЗначения = ?(мТипЗначенияСписка=неопределено или мТипЗначенияСписка=Null, "", ""+мТипЗначенияСписка);
		Исключение
			ТекстТипЗначения = "";
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура ВвестиГраницуИлиМоментВремени(тТип, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Ф = ПолучитьФорму("Редактор"+?(тТип=Тип("Граница"), "Граница", "МоментВремени"));
	Попытка
		Ф.НачальноеЗначениеВыбора = ЗначениеИзСтрокиВнутр(ЭлементыФормы.Список.ТекущиеДанные.ТЗ);
	Исключение
		Ф.НачальноеЗначениеВыбора = Неопределено;
	КонецПопытки;
	Ответ = Ф.ОткрытьМодально();
	Если ТипЗнч(Ответ)=тТип Тогда
		ЭлементыФормы.Список.ТекущиеДанные.ТЗ = ЗначениеВСтрокуВнутр(Ответ);
	КонецЕсли;
КонецПроцедуры

Процедура СписокЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если Элемент.Значение=Неопределено Тогда
		ТекТипЗнч = мТипЗначенияСписка;
		Попытка
			ТЗ = ЗначениеИзСтрокиВнутр(ЭлементыФормы.Список.ТекущиеДанные.ТЗ);
		Исключение
			ТЗ = Неопределено;
		КонецПопытки;
		тТип = ТипЗнч(ТЗ);
		Если тТип=Тип("Граница") или тТип=Тип("МоментВремени") Тогда
			ВвестиГраницуИлиМоментВремени(тТип, СтандартнаяОбработка);
			Возврат;
		КонецЕсли;
		Если ТипЗнч(ТекТипЗнч)=Тип("ОписаниеТипов") Тогда
		ИначеЕсли НЕ ВыбратьТип(ТекТипЗнч) Тогда
			Возврат;
		КонецЕсли;
		Если ТипЗнч(ТекТипЗнч)<>Тип("ОписаниеТипов") Тогда
			Предупреждение("Некорректно задан тип значения");
			Возврат;
		КонецЕсли;
		тТип = ?(ТекТипЗнч.Типы().Количество()=0, Неопределено, ТекТипЗнч.Типы().Получить(0));
		Если тТип=Тип("Граница") или тТип=Тип("МоментВремени") Тогда
			Элемент.Значение = Неопределено;
			ВвестиГраницуИлиМоментВремени(тТип, СтандартнаяОбработка);
		Иначе
			Элемент.Значение = ПустоеЗначениеТипа(ТекТипЗнч);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1Подбор(Кнопка)
	ТекТипЗначения = мТипЗначенияСписка;
	Если (ТекТипЗначения=Неопределено) или (ТекТипЗначения=Null) Тогда
		Если НЕ ВыбратьТип(ТекТипЗначения) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если ТипЗнч(ТекТипЗначения)<>Тип("ОписаниеТипов") Тогда
		Предупреждение("Некорректно задан тип значения");
		Возврат;
	ИначеЕсли ТекТипЗначения.Типы().Количество()<1 Тогда
		Возврат;
	КонецЕсли;
	ТекТип = ТекТипЗначения.Типы().Получить(0);
	ТекВид="...";
	Попытка
		МетаТип = Метаданные.НайтиПоТипу(ТекТип);
		ТекИмя = МетаТип.Имя;
		ТекВид = СтрЗаменить(МетаТип.ПолноеИмя(), "."+ТекИмя, "");
	Исключение
		Возврат;
	КонецПопытки;
	Если ТекВид="Справочник" Тогда
		Ф = Справочники[ТекИмя].ПолучитьФормуВыбора();
	ИначеЕсли ТекВид="Документ" Тогда
		Ф = Документы[ТекИмя].ПолучитьФормуВыбора();
	ИначеЕсли ТекВид="Перечисление" Тогда
		Ф = Перечисления[ТекИмя].ПолучитьФормуВыбора();
	ИначеЕсли ТекВид="ПланВидовХарактеристик" Тогда
		Ф = ПланыВидовХарактеристик[ТекИмя].ПолучитьФормуВыбора();
	ИначеЕсли ТекВид="ПланСчетов" Тогда
		Ф = ПланыСчетов[ТекИмя].ПолучитьФормуВыбора();
	ИначеЕсли ТекВид="ПланВидовРасчета" Тогда
		Ф = ПланыВидовРасчета[ТекИмя].ПолучитьФормуВыбора();
	ИначеЕсли ТекВид="БизнесПроцесс" Тогда
		Ф = БизнесПроцессы[ТекИмя].ПолучитьФормуВыбора();
	ИначеЕсли ТекВид="ТочкаМаршрутаБизнесПроцесса" Тогда
		Возврат;
	ИначеЕсли ТекВид="ПланВидовРасчета" Тогда
		Ф = ПланыВидовРасчета[ТекИмя].ПолучитьФормуВыбора();
	ИначеЕсли ТекВид="Задача" Тогда
		Ф = Задачи[ТекИмя].ПолучитьФормуВыбора();
	ИначеЕсли ТекВид="ПланОбмена" Тогда
		Ф = ПланыОбмена[ТекИмя].ПолучитьФормуВыбора();
	Иначе
		Предупреждение("Не удалось определить вид объекта - "+ТекВид);
		Возврат;
    КонецЕсли;
	Ф.МножественныйВыбор = Ложь;
	Ф.ЗакрыватьПриВыборе = Ложь;
	Ф.ВладелецФормы = ЭтаФорма;
	Ф.Открыть();
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	Попытка
		МетаТип = Метаданные.НайтиПоТипу(ТипЗнч(ЗначениеВыбора));
		Если МетаТип=Неопределено Тогда
			Возврат;
		КонецЕсли;
	Исключение
		Возврат;
	КонецПопытки;
	Если Список.Найти(ЗначениеВыбора, "Значение")=Неопределено Тогда
		Список.Добавить().Значение = ЗначениеВыбора;
	КонецЕсли;
	ОбновитьЗаголовокФормы();
КонецПроцедуры

Процедура СписокПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НЕ ОтменаРедактирования Тогда
		Попытка
			тТип = ТипЗнч(ЗначениеИзСтрокиВнутр(ЭлементыФормы.Список.ТекущиеДанные.ТЗ));
		Исключение
			тТип = ТипЗнч(ЭлементыФормы.Список.ТекущиеДанные.Значение);
		КонецПопытки;
		мт = Новый Массив();
		мт.Добавить(тТип);
		ЭлементыФормы.Список.ТекущиеДанные.ТипЗначения = Новый ОписаниеТипов(мт);
	КонецЕсли;
	ОбновитьЗаголовокФормы();
КонецПроцедуры

Процедура ПриОткрытии()
	Для каждого Элемент Из Значение Цикл		
		НС = Список.Добавить();
		ТТ = ТипЗнч(Элемент.Значение);
		МТ = Новый Массив();
		МТ.Добавить(ТТ);
		тТип = Новый ОписаниеТипов(МТ);
		НС.ТипЗначения = тТип;
		Если (тТип = ТипГраница) или (тТип=ТипМоментВремени) Тогда
			НС.Значение = Неопределено;
			НС.ТЗ = ЗначениеВСтрокуВнутр(Элемент.Значение);
		Иначе
			НС.Значение = Элемент.Значение;
			НС.ТЗ = "";
		КонецЕсли;
	КонецЦикла;
	ОбновитьЗаголовокФормы();
КонецПроцедуры

Процедура СписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ТекТип = ДанныеСтроки.ТипЗначения;
	Если ТекТип=ТипГраница или ТекТип=ТипМоментВремени Тогда
		Попытка
			ОформлениеСтроки.Ячейки.Значение.Текст=""+ЗначениеИзСтрокиВнутр(ДанныеСтроки.ТЗ);
		Исключение
			ОформлениеСтроки.Ячейки.Значение.Текст="";
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура СписокЗначениеОчистка(Элемент, СтандартнаяОбработка)
	ЭлементыФормы.Список.ТекущиеДанные.ТЗ = "";
КонецПроцедуры

Процедура ТекстТипЗначенияОчистка(Элемент, СтандартнаяОбработка)
	мТипЗначенияСписка = Неопределено;
КонецПроцедуры

Процедура СписокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТД = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТД=Неопределено или ТипЗнч(мТипЗначенияСписка)<>Тип("ОписаниеТипов") Тогда
	ИначеЕсли ТД.Значение<>Неопределено Тогда
	Иначе
		ТД.Значение = мТипЗначенияСписка.ПривестиЗначение();
	КонецЕсли;
КонецПроцедуры

мТипЗначенияСписка = Неопределено;
ТипГраница = новый ОписаниеТипов("Граница");
ТипМоментВремени = новый ОписаниеТипов("МоментВремени");